{"ast":null,"code":"// frontend/src/services/apiService.js\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nexport const fetchCollectionsWithAssets = async () => {\n  try {\n    console.log(\"Attempting to fetch collections with assets...\");\n    const response = await axios.get(`${API_BASE_URL}/collections-with-assets`);\n    console.log(\"Fetched collections with assets:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching collections with assets:\", error);\n    return [];\n  }\n};\nexport const fetchControlsForAsset = async assetName => {\n  try {\n    const encodedAssetName = encodeURIComponent(assetName);\n    console.log(`Attempting to fetch controls for asset: ${assetName}`);\n    const response = await axios.get(`${API_BASE_URL}/assets/${encodedAssetName}/controls`);\n    console.log(`Response from backend for controls of ${assetName}:`, response.data);\n    return response.data.controls;\n  } catch (error) {\n    console.error(`Error fetching controls for asset ${assetName}:`, error);\n    return [];\n  }\n};\nexport const saveAsset = async data => {\n  try {\n    console.log(\"Attempting to save asset data:\", data);\n    await axios.post(`${API_BASE_URL}/save-asset`, data);\n    console.log(\"Asset saved successfully!\");\n    alert(\"Asset saved successfully!\");\n  } catch (error) {\n    console.error(\"Error saving asset:\", error);\n  }\n};\nexport const fetchSavedAssets = async () => {\n  try {\n    console.log(\"Attempting to fetch saved assets...\");\n    const response = await axios.get(`${API_BASE_URL}/saved-assets`);\n    console.log(\"Fetched saved assets:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching saved assets:\", error);\n    return [];\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","fetchCollectionsWithAssets","console","log","response","get","data","error","fetchControlsForAsset","assetName","encodedAssetName","encodeURIComponent","controls","saveAsset","post","alert","fetchSavedAssets"],"sources":["/home/inbe1e-dl3947cs/Desktop/Cyient/Healthcare TARA.v03/CySecAssureTARA/frontend/src/services/apiService.js"],"sourcesContent":["// frontend/src/services/apiService.js\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5000/api';\n\nexport const fetchCollectionsWithAssets = async () => {\n    try {\n        console.log(\"Attempting to fetch collections with assets...\");\n        const response = await axios.get(`${API_BASE_URL}/collections-with-assets`);\n        console.log(\"Fetched collections with assets:\", response.data);\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching collections with assets:\", error);\n        return [];\n    }\n};\n\nexport const fetchControlsForAsset = async (assetName) => {\n    try {\n        const encodedAssetName = encodeURIComponent(assetName);\n        console.log(`Attempting to fetch controls for asset: ${assetName}`);\n\n        const response = await axios.get(`${API_BASE_URL}/assets/${encodedAssetName}/controls`);\n        \n        console.log(`Response from backend for controls of ${assetName}:`, response.data);\n        return response.data.controls;\n    } catch (error) {\n        console.error(`Error fetching controls for asset ${assetName}:`, error);\n        return [];\n    }\n};\n\nexport const saveAsset = async (data) => {\n    try {\n        console.log(\"Attempting to save asset data:\", data);\n        await axios.post(`${API_BASE_URL}/save-asset`, data);\n        console.log(\"Asset saved successfully!\");\n        alert(\"Asset saved successfully!\");\n    } catch (error) {\n        console.error(\"Error saving asset:\", error);\n    }\n};\n\nexport const fetchSavedAssets = async () => {\n    try {\n        console.log(\"Attempting to fetch saved assets...\");\n        const response = await axios.get(`${API_BASE_URL}/saved-assets`);\n        console.log(\"Fetched saved assets:\", response.data);\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching saved assets:\", error);\n        return [];\n    }\n};\n\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,0BAA0B,GAAG,MAAAA,CAAA,KAAY;EAClD,IAAI;IACAC,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;IAC7D,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGL,YAAY,0BAA0B,CAAC;IAC3EE,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEC,QAAQ,CAACE,IAAI,CAAC;IAC9D,OAAOF,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZL,OAAO,CAACK,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IAC/D,OAAO,EAAE;EACb;AACJ,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAG,MAAOC,SAAS,IAAK;EACtD,IAAI;IACA,MAAMC,gBAAgB,GAAGC,kBAAkB,CAACF,SAAS,CAAC;IACtDP,OAAO,CAACC,GAAG,CAAC,2CAA2CM,SAAS,EAAE,CAAC;IAEnE,MAAML,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGL,YAAY,WAAWU,gBAAgB,WAAW,CAAC;IAEvFR,OAAO,CAACC,GAAG,CAAC,yCAAyCM,SAAS,GAAG,EAAEL,QAAQ,CAACE,IAAI,CAAC;IACjF,OAAOF,QAAQ,CAACE,IAAI,CAACM,QAAQ;EACjC,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZL,OAAO,CAACK,KAAK,CAAC,qCAAqCE,SAAS,GAAG,EAAEF,KAAK,CAAC;IACvE,OAAO,EAAE;EACb;AACJ,CAAC;AAED,OAAO,MAAMM,SAAS,GAAG,MAAOP,IAAI,IAAK;EACrC,IAAI;IACAJ,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEG,IAAI,CAAC;IACnD,MAAMP,KAAK,CAACe,IAAI,CAAC,GAAGd,YAAY,aAAa,EAAEM,IAAI,CAAC;IACpDJ,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxCY,KAAK,CAAC,2BAA2B,CAAC;EACtC,CAAC,CAAC,OAAOR,KAAK,EAAE;IACZL,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;EAC/C;AACJ,CAAC;AAED,OAAO,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACAd,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAClD,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,GAAGL,YAAY,eAAe,CAAC;IAChEE,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,QAAQ,CAACE,IAAI,CAAC;IACnD,OAAOF,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZL,OAAO,CAACK,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,EAAE;EACb;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}