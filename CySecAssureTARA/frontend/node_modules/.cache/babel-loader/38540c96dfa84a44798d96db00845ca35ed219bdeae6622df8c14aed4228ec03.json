{"ast":null,"code":"var _jsxFileName = \"/home/inbe1e-dl3947cs/Desktop/Cyient/Healthcare TARA.v03/CySecAssureTARA/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport DropdownMenu from './components/DropdownMenu';\nimport AssetForm from './components/AssetForm';\nimport AssetListPanel from './components/AssetListPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [assets, setAssets] = useState([]); // State to store assets fetched from the backend\n  const [selectedAssets, setSelectedAssets] = useState([]); // State to store selected assets\n  const [savedAssets, setSavedAssets] = useState([]); // State to store assets added with form data\n\n  // Fetch assets from the backend on component mount\n  useEffect(() => {\n    const fetchAssets = async () => {\n      try {\n        const response = await axios.get('/api/assets'); // Replace with correct endpoint\n        console.log(\"Fetched assets from backend:\", response.data);\n        setAssets(response.data);\n      } catch (error) {\n        console.error(\"Error fetching assets:\", error);\n      }\n    };\n    fetchAssets();\n  }, []);\n\n  // Handle selection toggle for an asset in the dropdown menu\n  const handleSelectAsset = assetName => {\n    setSelectedAssets(prevSelected => prevSelected.includes(assetName) ? prevSelected.filter(asset => asset !== assetName) // Remove if already selected\n    : [...prevSelected, assetName] // Add if not selected\n    );\n    console.log(\"Selected assets updated:\", selectedAssets);\n  };\n\n  // Handle form submission and add selected assets to the saved assets list\n  const handleAddAssets = assetData => {\n    setSavedAssets(prevSavedAssets => [...prevSavedAssets, ...assetData]);\n    console.log(\"Assets added to saved list:\", assetData);\n    setSelectedAssets([]); // Clear selection after adding\n  };\n\n  // Update existing controls for a specific asset in the saved assets list\n  const handleUpdateAssetControls = (assetName, controls) => {\n    setSavedAssets(prevSavedAssets => prevSavedAssets.map(asset => asset.assetName === assetName ? {\n      ...asset,\n      existingControls: controls\n    } : asset));\n    console.log(`Updated controls for asset ${assetName}:`, controls);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Asset Selection and Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      assets: assets,\n      selectedAssets: selectedAssets,\n      onSelectAsset: handleSelectAsset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AssetForm, {\n      assets: assets,\n      selectedAssets: selectedAssets,\n      onAddAssets: handleAddAssets\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AssetListPanel, {\n      savedAssets: savedAssets,\n      onUpdateAssetControls: handleUpdateAssetControls\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"LeXAQPcg7zrdIsCh3FgNnRGx5hE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","DropdownMenu","AssetForm","AssetListPanel","jsxDEV","_jsxDEV","App","_s","assets","setAssets","selectedAssets","setSelectedAssets","savedAssets","setSavedAssets","fetchAssets","response","get","console","log","data","error","handleSelectAsset","assetName","prevSelected","includes","filter","asset","handleAddAssets","assetData","prevSavedAssets","handleUpdateAssetControls","controls","map","existingControls","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectAsset","onAddAssets","onUpdateAssetControls","_c","$RefreshReg$"],"sources":["/home/inbe1e-dl3947cs/Desktop/Cyient/Healthcare TARA.v03/CySecAssureTARA/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport DropdownMenu from './components/DropdownMenu';\nimport AssetForm from './components/AssetForm';\nimport AssetListPanel from './components/AssetListPanel';\n\nconst App = () => {\n    const [assets, setAssets] = useState([]); // State to store assets fetched from the backend\n    const [selectedAssets, setSelectedAssets] = useState([]); // State to store selected assets\n    const [savedAssets, setSavedAssets] = useState([]); // State to store assets added with form data\n\n    // Fetch assets from the backend on component mount\n    useEffect(() => {\n        const fetchAssets = async () => {\n            try {\n                const response = await axios.get('/api/assets'); // Replace with correct endpoint\n                console.log(\"Fetched assets from backend:\", response.data);\n                setAssets(response.data);\n            } catch (error) {\n                console.error(\"Error fetching assets:\", error);\n            }\n        };\n\n        fetchAssets();\n    }, []);\n\n    // Handle selection toggle for an asset in the dropdown menu\n    const handleSelectAsset = (assetName) => {\n        setSelectedAssets((prevSelected) =>\n            prevSelected.includes(assetName)\n                ? prevSelected.filter((asset) => asset !== assetName) // Remove if already selected\n                : [...prevSelected, assetName] // Add if not selected\n        );\n        console.log(\"Selected assets updated:\", selectedAssets);\n    };\n\n    // Handle form submission and add selected assets to the saved assets list\n    const handleAddAssets = (assetData) => {\n        setSavedAssets((prevSavedAssets) => [...prevSavedAssets, ...assetData]);\n        console.log(\"Assets added to saved list:\", assetData);\n        setSelectedAssets([]); // Clear selection after adding\n    };\n\n    // Update existing controls for a specific asset in the saved assets list\n    const handleUpdateAssetControls = (assetName, controls) => {\n        setSavedAssets((prevSavedAssets) =>\n            prevSavedAssets.map((asset) =>\n                asset.assetName === assetName\n                    ? { ...asset, existingControls: controls }\n                    : asset\n            )\n        );\n        console.log(`Updated controls for asset ${assetName}:`, controls);\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Asset Selection and Management</h1>\n\n            {/* Dropdown and Form to Select Assets */}\n            <DropdownMenu\n                assets={assets}\n                selectedAssets={selectedAssets}\n                onSelectAsset={handleSelectAsset}\n            />\n\n            {/* Form to Add Assets with Selected Fields */}\n            <AssetForm\n                assets={assets}\n                selectedAssets={selectedAssets}\n                onAddAssets={handleAddAssets}\n            />\n\n            {/* Display Saved Assets with the Ability to Update Controls */}\n            <AssetListPanel\n                savedAssets={savedAssets}\n                onUpdateAssetControls={handleUpdateAssetControls}\n            />\n        </div>\n    );\n};\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}