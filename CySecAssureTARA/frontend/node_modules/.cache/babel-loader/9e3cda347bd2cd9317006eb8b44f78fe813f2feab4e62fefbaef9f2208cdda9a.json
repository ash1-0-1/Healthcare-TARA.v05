{"ast":null,"code":"var _jsxFileName = \"/home/inbe1e-dl3947cs/Desktop/Cyient/Healthcare TARA.v03/CySecAssureTARA/frontend/src/components/popups/ExistingControlsPopup.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/popups/ExistingControlsPopup.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExistingControlsPopup = ({\n  assetName,\n  onClose,\n  onSave\n}) => {\n  _s();\n  const [controls, setControls] = useState([]);\n  const [selectedControls, setSelectedControls] = useState([]);\n  useEffect(() => {\n    axios.get(`/api/assets/${assetName}/controls`).then(response => {\n      const controlsArray = response.data.controls.split('\\n');\n      setControls(controlsArray);\n    }).catch(error => console.error(`Error fetching controls for ${assetName}:`, error));\n  }, [assetName]);\n  const toggleControl = control => {\n    setSelectedControls(prev => prev.includes(control) ? prev.filter(c => c !== control) : [...prev, control]);\n  };\n  const handleSave = () => {\n    onSave(selectedControls);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Select Existing Controls for \", assetName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), controls.map((control, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-option\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedControls.includes(control),\n          onChange: () => toggleControl(control)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(ExistingControlsPopup, \"JN6q2vuV8HKix9tk4xNhDoHGo7k=\");\n_c = ExistingControlsPopup;\nexport default ExistingControlsPopup;\nvar _c;\n$RefreshReg$(_c, \"ExistingControlsPopup\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ExistingControlsPopup","assetName","onClose","onSave","_s","controls","setControls","selectedControls","setSelectedControls","get","then","response","controlsArray","data","split","catch","error","console","toggleControl","control","prev","includes","filter","c","handleSave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/inbe1e-dl3947cs/Desktop/Cyient/Healthcare TARA.v03/CySecAssureTARA/frontend/src/components/popups/ExistingControlsPopup.js"],"sourcesContent":["// frontend/src/components/popups/ExistingControlsPopup.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ExistingControlsPopup = ({ assetName, onClose, onSave }) => {\n    const [controls, setControls] = useState([]);\n    const [selectedControls, setSelectedControls] = useState([]);\n\n    useEffect(() => {\n        axios\n            .get(`/api/assets/${assetName}/controls`)\n            .then((response) => {\n                const controlsArray = response.data.controls.split('\\n');\n                setControls(controlsArray);\n            })\n            .catch((error) => console.error(`Error fetching controls for ${assetName}:`, error));\n    }, [assetName]);\n\n    const toggleControl = (control) => {\n        setSelectedControls((prev) =>\n            prev.includes(control) ? prev.filter((c) => c !== control) : [...prev, control]\n        );\n    };\n\n    const handleSave = () => {\n        onSave(selectedControls);\n    };\n\n    return (\n        <div className=\"popup-overlay\">\n            <div className=\"popup-content\">\n                <h3>Select Existing Controls for {assetName}</h3>\n                {controls.map((control, index) => (\n                    <div key={index} className=\"control-option\">\n                        <input\n                            type=\"checkbox\"\n                            checked={selectedControls.includes(control)}\n                            onChange={() => toggleControl(control)}\n                        />\n                        <label>{control}</label>\n                    </div>\n                ))}\n                <button onClick={handleSave}>Save</button>\n                <button onClick={onClose}>Cancel</button>\n            </div>\n        </div>\n    );\n};\n\nexport default ExistingControlsPopup;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}